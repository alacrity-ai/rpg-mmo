version: '3.8'

services:
  redis:
    build:
      context: ./redis
      dockerfile: Dockerfile
    volumes:
      - ./redis/volume:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  database:
    build:
      context: ./database
      dockerfile: Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: testdb
    volumes:
      - ./database/volume:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 10

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      DB_HOST: database
      REDIS_HOST: redis
    env_file:
      - ./server/.env
    ports:
      - "3000:3000"
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 5s
      timeout: 5s
      retries: 10

  worker:
    build:
      context: ./server
      dockerfile: Dockerfile.worker
    environment:
      DB_HOST: database
      REDIS_HOST: redis
    env_file:
      - ./server/.env
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
      server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://server:3000"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: on-failure

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    env_file:
      - ./client/.env
    ports:
      - "8000:8000"
    depends_on:
      server:
        condition: service_healthy
      worker:
        condition: service_healthy
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
